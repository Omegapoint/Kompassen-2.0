name: Deploy

on:
  push:
    branches:
      - main

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  DEPLOY_NAME: kompassen2
  OCI_REGISTRY: kompassen2.azurecr.io

jobs:
  apply_infra:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v1

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Initialize terraform
        run: terraform init
        working-directory: ./infrastructure/production

      - name: Apply terraform state
        run: terraform apply --auto-approve
        working-directory: ./infrastructure/production

  # build_and_deploy_web_app:
  #   runs-on: ubuntu-latest
  #   name: Build and deploy web app
  #   needs: apply_infra
  #   env:
  #     OCI_IMAGE: kompassen2.azurecr.io/webapp
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v1

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Login to ACR
  #       uses: docker/login-action@v1
  #       with:
  #         registry: "${{ env.OCI_REGISTRY }}"
  #         username: "${{ secrets.ARM_CLIENT_ID }}"
  #         password: "${{ secrets.ARM_CLIENT_SECRET }}"

  #     - name: Build and push
  #       id: docker_build
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: webapp
  #         push: true
  #         tags: "${{ env.OCI_IMAGE }}:latest"
  #         cache-from: "type=registry,ref=${{ env.OCI_IMAGE }}:buildcache"
  #         cache-to: "type=registry,ref=${{ env.OCI_IMAGE }}:buildcache,mode=max"

  #     - name: Azure Login
  #       uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}

  #     - name: Azure CLI script
  #       id: azure_api_key
  #       uses: azure/CLI@v1
  #       with:
  #         azcliversion: 2.25.0
  #         inlineScript: "az webapp restart -g ${{ env.DEPLOY_NAME }} -n ${{ env.DEPLOY_NAME }}"

  # build_and_deploy_server:
  #   runs-on: ubuntu-latest
  #   name: Build and deploy server
  #   needs: apply_infra
  #   env:
  #     OCI_IMAGE: kompassen2.azurecr.io/server
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v1

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Login to ACR
  #       uses: docker/login-action@v1
  #       with:
  #         registry: "${{ env.OCI_REGISTRY }}"
  #         username: "${{ secrets.ARM_CLIENT_ID }}"
  #         password: "${{ secrets.ARM_CLIENT_SECRET }}"

  #     - name: Build and push
  #       id: docker_build
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: server
  #         push: true
  #         tags: "${{ env.OCI_IMAGE }}:latest"
  #         cache-from: "type=registry,ref=${{ env.OCI_IMAGE }}:buildcache"
  #         cache-to: "type=registry,ref=${{ env.OCI_IMAGE }}:buildcache,mode=max"

  #     - name: Azure Login
  #       uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}

  #     - name: Azure CLI script
  #       id: azure_api_key
  #       uses: azure/CLI@v1
  #       with:
  #         azcliversion: 2.25.0
  #         inlineScript: "az webapp restart -g ${{ env.DEPLOY_NAME }} -n ${{ env.DEPLOY_NAME }}-server"
